[{"/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/block-navigation.js":"1","/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/prettify.js":"2","/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/sorter.js":"3","/Users/sdelev/projects/newskit/newskit/codemod/jest.config.js":"4","/Users/sdelev/projects/newskit/newskit/codemod/src/cli.js":"5","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/actual.js":"6","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/expected.js":"7","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/update-token.test.js":"8","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/utils.js":"9","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/update-token.js":"10","/Users/sdelev/projects/newskit/newskit/codemod/.eslintrc.js":"11"},{"size":2655,"mtime":1656675918493,"results":"12","hashOfConfig":"13"},{"size":17590,"mtime":1656675918500,"results":"14","hashOfConfig":"13"},{"size":6181,"mtime":1656675918497,"results":"15","hashOfConfig":"13"},{"size":185,"mtime":1656676484140,"results":"16","hashOfConfig":"17"},{"size":3024,"mtime":1656680805359,"results":"18","hashOfConfig":"17"},{"size":113,"mtime":1656675361376,"results":"19","hashOfConfig":"17"},{"size":120,"mtime":1656675361376,"results":"20","hashOfConfig":"17"},{"size":524,"mtime":1656675361377,"results":"21","hashOfConfig":"17"},{"size":287,"mtime":1656675361377,"results":"22","hashOfConfig":"17"},{"size":119,"mtime":1656675361377,"results":"23","hashOfConfig":"17"},{"size":1319,"mtime":1656680099251,"results":"24","hashOfConfig":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"znv0e1",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ses2nn",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/block-navigation.js",["59"],[],"/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/prettify.js",["60"],[],"/Users/sdelev/projects/newskit/newskit/codemod/coverage/lcov-report/sorter.js",["61"],[],"/Users/sdelev/projects/newskit/newskit/codemod/jest.config.js",[],[],"/Users/sdelev/projects/newskit/newskit/codemod/src/cli.js",["62"],["63"],"#!/usr/bin/env node\n\nconst yargs = require('yargs');\nconst chalk = require('chalk');\nconst {run: jscodeshift} = require('jscodeshift/src/Runner');\nconst path = require('path');\nconst glob = require('glob');\nconst packageJson = require('../package.json');\n\nconst PACKAGE_NAME = packageJson.name;\n\n// Codemods names and descriptions are defined below.\n// Users can select one of these to run from the CLI\nconst TRANSFORMS = {\n  'update-token': 'Update newskit tokens from v5 to v6',\n};\n\nfunction expandFilePathsIfNeeded(filesBeforeExpansion) {\n  const shouldExpandFiles = filesBeforeExpansion.some(file =>\n    file.includes('*'),\n  );\n  return shouldExpandFiles\n    ? filesBeforeExpansion.map(filePath => glob.sync(filePath)).flat()\n    : filesBeforeExpansion;\n}\n\n\n\n\n\nasync function runTransform(codemodName, files, args) {\n  const transformPath = path.join(__dirname, `transforms/${codemodName}.js`);\n  const filesBeforeExpansion = [files];\n\n  const filesExpanded = expandFilePathsIfNeeded(filesBeforeExpansion);\n\n  const options = {\n    verbose: 1,\n    parser: 'tsx',\n    ...args,\n  };\n\n  await jscodeshift(transformPath, filesExpanded, options);\n  console.log(\n    `✨ Successfully completed running ${chalk.cyan(codemodName)} codemod.`,\n  );\n}\n\n// Set up yargs\n// eslint-disable-next-line @typescript-eslint/no-unused-expressions\nyargs\n  .scriptName(PACKAGE_NAME)\n  .command({\n    command: '$0 [codemod] [paths]',\n    desc: 'Run codemod on files',\n    builder: y => {\n      y.positional('codemod', {\n        type: 'string',\n        describe: 'The name of the codemod to run',\n        demandOption: true,\n      });\n      y.positional('paths', {\n        type: 'string',\n        describe:\n          'Files or directory to transform. Can be a glob like src/**.js',\n        demandOption: true,\n      });\n    },\n    handler: params => {\n      const {codemod, paths, ...args} = params;\n\n      runTransform(codemod, paths, args);\n    },\n  })\n  .option('print', {\n    alias: 'p',\n    describe:\n      'print transformed file contents to stdout, useful for development',\n    type: 'boolean',\n    default: false,\n  })\n  .option('dry', {\n    alias: 'd',\n    description: 'dry run (no changes are made to files)',\n    type: 'boolean',\n    default: false,\n  })\n  .option('parser', {\n    description: 'the parser to use for parsing the source files ',\n    type: 'string',\n    choices: ['babel', 'babylon', 'flow', 'ts', 'tsx'],\n    default: 'tsx',\n  })\n  .demandOption(\n    ['codemod', 'paths'],\n    `⛔️  Please provide both ${chalk.green.bold(\n      'codemod',\n    )} and ${chalk.green.bold('paths')} arguments to work with this tool`,\n  )\n  .usage(\n    `\n    ${chalk.white.bold(PACKAGE_NAME)}\n    Codemods for updating NewsKit\n    Usage:\n      $ ${PACKAGE_NAME}  <CODEMOD_NAME> <PATH_TO_CODE>\n\n    Example:\n      $ ${PACKAGE_NAME} update-tokens ./src/**/*.+(ts|tsx|json) \n\n    Codemods:\n      ${Object.keys(TRANSFORMS)\n        .map(m => `  ${m} - ${TRANSFORMS[m]}`)\n        .join(`\\n`)}`,\n  )\n  .help()\n  .alias('help', 'h').argv;\n","/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/actual.js",[],["64"],"/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/expected.js",[],["65"],"/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/update-token/update-token.test.js",[],[],"/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/__tests__/utils.js",[],[],"/Users/sdelev/projects/newskit/newskit/codemod/src/transforms/update-token.js",[],[],"/Users/sdelev/projects/newskit/newskit/codemod/.eslintrc.js",[],[],{"ruleId":null,"fatal":true,"severity":2,"message":"66"},{"ruleId":null,"fatal":true,"severity":2,"message":"67"},{"ruleId":null,"fatal":true,"severity":2,"message":"68"},{"ruleId":"69","severity":2,"message":"70","line":27,"column":1,"nodeType":null,"messageId":"71","endLine":31,"endColumn":1,"fix":"72"},{"ruleId":"73","severity":2,"message":"74","line":51,"column":1,"nodeType":"75","messageId":"76","endLine":116,"endColumn":28,"suppressions":"77"},{"ruleId":"78","severity":2,"message":"79","line":2,"column":7,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16,"suppressions":"82"},{"ruleId":"78","severity":2,"message":"79","line":2,"column":7,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16,"suppressions":"83"},"Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: coverage/lcov-report/block-navigation.js.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: coverage/lcov-report/prettify.js.\nThe file must be included in at least one of the projects provided.","Parsing error: \"parserOptions.project\" has been set for @typescript-eslint/parser.\nThe file does not match your project config: coverage/lcov-report/sorter.js.\nThe file must be included in at least one of the projects provided.","prettier/prettier","Delete `⏎⏎⏎⏎`","delete",{"range":"84","text":"85"},"@typescript-eslint/no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["86"],"@typescript-eslint/no-unused-vars","'mockTheme' is assigned a value but never used.","Identifier","unusedVar",["87"],["88"],[762,766],"",{"kind":"89","justification":"85"},{"kind":"89","justification":"85"},{"kind":"89","justification":"85"},"directive"]