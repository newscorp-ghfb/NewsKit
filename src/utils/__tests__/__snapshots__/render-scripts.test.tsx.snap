// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderScripts renders inline and external scripts as script tags 1`] = `
<DocumentFragment>
  <script
    src="https://example.com/my-javascript-file.js"
    type="text/javascript"
  />
  <script
    type="text/javascript"
  >
    (function () { alert('some injected script') })();
  </script>
  <script
    src="https://example.com/my-javascript-file2.js"
    type="text/javascript"
  />
  <script
    type="text/javascript"
  >
    (function () { alert('some more injected script') })();
  </script>
</DocumentFragment>
`;

exports[`RenderScripts renders inline and external scripts via ReactHelmet 1`] = `
<DocumentFragment>
  <div>
    MockReactHelmet props: {
  "script": [
    {
      "type": "text/javascript",
      "src": "https://example.com/my-javascript-file.js"
    },
    {
      "type": "text/javascript",
      "innerHTML": "(function () { alert('some injected script') })();"
    },
    {
      "type": "text/javascript",
      "src": "https://example.com/my-javascript-file2.js"
    },
    {
      "type": "text/javascript",
      "innerHTML": "(function () { alert('some more injected script') })();"
    }
  ]
}
  </div>
</DocumentFragment>
`;

exports[`RenderScripts renders scripts and correctly parses objects with events 1`] = `
<DocumentFragment>
  <script
    type="text/javascript"
  >
    {
            "onMessageReady":  () =&gt; {
            console.log('onMessageReady');
          },
            "onConsentReady": function onConsentReady(consentUUID, euconsent) {
            console.log('onConsentReady');
            }
          }
        }
      }
  </script>
</DocumentFragment>
`;

exports[`RenderScripts renders scripts and correctly parses objects with events via ReactHelmet 1`] = `
<DocumentFragment>
  <div>
    MockReactHelmet props: {
  "script": [
    {
      "type": "text/javascript",
      "innerHTML": "{\\n            \\"onMessageReady\\":  () =&gt; {\\n            console.log('onMessageReady');\\n          },\\n            \\"onConsentReady\\": function onConsentReady(consentUUID, euconsent) {\\n            console.log('onConsentReady');\\n            }\\n          }\\n        }\\n      }"
    }
  ]
}
  </div>
</DocumentFragment>
`;

exports[`RenderScripts renders with nonce 1`] = `
<DocumentFragment>
  <script
    nonce="we32s235"
    type="text/javascript"
  >
    {
            "onMessageReady":  () =&gt; {
            console.log('onMessageReady');
          },
            "onConsentReady": function onConsentReady(consentUUID, euconsent) {
            console.log('onConsentReady');
            }
          }
        }
      }
  </script>
</DocumentFragment>
`;
