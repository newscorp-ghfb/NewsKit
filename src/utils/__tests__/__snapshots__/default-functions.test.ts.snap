// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`get component defaults functions Component defaults with CSS Units responsive CSS Units getSpacingInlineHorizontal 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "marginRight": "13px",
  },
  "@media screen and (min-width: 768px)": Object {
    "marginRight": "23px",
  },
}
`;

exports[`get component defaults functions Component defaults with CSS Units responsive CSS Units getSpacingInlineVertical 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "marginBottom": "13px",
  },
  "@media screen and (min-width: 768px)": Object {
    "marginBottom": "23px",
  },
}
`;

exports[`get component defaults functions Component defaults with CSS Units responsive CSS Units getSpacingInset 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "padding": "10px",
  },
  "@media screen and (min-width: 768px)": Object {
    "padding": "20px",
  },
}
`;

exports[`get component defaults functions Component defaults with CSS Units responsive CSS Units getSpacingStackHorizontal 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "marginBottom": "14px",
  },
  "@media screen and (min-width: 768px)": Object {
    "marginBottom": "24px",
  },
}
`;

exports[`get component defaults functions Component defaults with CSS Units responsive CSS Units getSpacingStackVertical 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "marginRight": "14px",
  },
  "@media screen and (min-width: 768px)": Object {
    "marginRight": "24px",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get component defaults functions getSpacingInlineHorizontal for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get component defaults functions getSpacingInlineVertical for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "padding": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "padding": "theDefaultToken-value-space",
  },
  "@media screen and (min-width: 768px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingInset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "padding": "theDefaultToken-value-space",
  },
  "@media screen and (min-width: 768px)": Object {
    "padding": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginBottom": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get component defaults functions getSpacingStackHorizontal for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginBottom": "",
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "marginRight": "theOverrideToken-value-space",
  },
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get component defaults functions getSpacingStackVertical for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "marginRight": "",
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "transitionDuration": "200ms",
    "transitionProperty": "css-props-for-default-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 768px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTransitionPreset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "transitionDuration": "200ms",
    "transitionProperty": "css-props-for-default-token",
    "transitionTimingFunction": "linear",
  },
  "@media screen and (min-width: 768px)": Object {
    "transitionDuration": "300ms",
    "transitionProperty": "css-props-for-override-token",
    "transitionTimingFunction": "linear",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with no override path provided: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:no-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path as empty string: breakpoint-override-object:with-path-end 2`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens when props.overrides is set with breakpoint object with override path: breakpoint-override-object:with-path-end 1`] = `
Object {
  "@media screen and (min-width: 1024px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
  "@media screen and (min-width: 480px) and (max-width: 1023px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens with no override path provided, with and without token type at the end: default:no-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "fontFamily": "theDefaultToken-value-typographyPresets",
  },
  "@media screen and (min-width: 768px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;

exports[`get component defaults functions getTypographyPreset for responsive tokens with no override path provided, with and without token type at the end: default:with-path-end 1`] = `
Object {
  "@media screen and (max-width: 767px)": Object {
    "fontFamily": "theDefaultToken-value-typographyPresets",
  },
  "@media screen and (min-width: 768px)": Object {
    "fontFamily": "theOverrideToken-value-typographyPresets",
  },
}
`;
