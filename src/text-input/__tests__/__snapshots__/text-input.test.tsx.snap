// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders correctly with label and assistive text 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders correctly with label hidden 1`] = `
<DocumentFragment>
  .emotion-1 {
  position: relative;
}

.emotion-2 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-4 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <div
      class="emotion-1"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        aria-label="label"
        class="emotion-2"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-3"
    >
      <p
        class="emotion-4"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders correctly without asistive text 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-invalid="false"
        class="emotion-3"
        id="mock-nk-1"
        spellcheck="true"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    />
  </div>
</DocumentFragment>
`;

exports[`TextInput renders disabled text input 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: not-allowed;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      disabled=""
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        disabled=""
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        disabled=""
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders large text input 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders readonly text input 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        readonly=""
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders small text input 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders text input with leading icon 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  pointer-events: none;
}

.emotion-4 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
  color: #535353;
  fill: #535353;
  vertical-align: unset;
  display: inline-block;
}

.emotion-4.emotion-4 {
  width: 24px;
  height: 24px;
  color: #535353;
  fill: #535353;
}

.emotion-6 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-8 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <span
        class="emotion-3"
      >
        <svg
          aria-hidden="true"
          class="emotion-4 emotion-5"
          fill="currentColor"
          focusable="false"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 0h24v24H0z"
            fill="none"
          />
          <path
            d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
          />
        </svg>
      </span>
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-6"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-7"
    >
      <p
        class="emotion-8"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders text input with overrides 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
  color: #f000dc;
  font-family: "Poppins",sans-serif;
  font-size: 12px;
  line-height: 18px;
  font-weight: 500;
  letter-spacing: -0.5px;
  padding: 0.5px 0px;
  margin-bottom: 24px;
  margin-right: 8px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2 {
  position: relative;
  margin-bottom: 16px;
}

.emotion-3 {
  font-family: "DM Sans",sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 400;
  letter-spacing: -0.5px;
  padding: 0.5px 0px;
  box-sizing: border-box;
  width: 100%;
  cursor: default;
  border-color: #D20600;
  padding: 8px;
  min-height: 64px;
}

.emotion-3::before {
  content: '';
  margin-bottom: -0.391em;
  display: block;
}

.emotion-3::after {
  content: '';
  margin-top: -0.409em;
  display: block;
}

.emotion-4 {
  min-height: 24px;
}

.emotion-5 {
  margin: 0;
  color: #f000dc;
  font-family: "Poppins",sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 500;
  letter-spacing: -0.5px;
  padding: 0.5px 0px;
}

.emotion-5::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-5::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders text input with overrides for leading and validation icon 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  pointer-events: none;
}

.emotion-4 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
  color: #535353;
  fill: #535353;
  vertical-align: unset;
  display: inline-block;
}

.emotion-4.emotion-4 {
  width: 24px;
  height: 24px;
  color: #535353;
  fill: #535353;
}

.emotion-6 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-6 {
  padding-left: 48px;
}

.emotion-8 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <span
        class="emotion-3"
      >
        <svg
          aria-hidden="true"
          class="emotion-4 emotion-5"
          fill="currentColor"
          focusable="false"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 0h24v24H0z"
            fill="none"
          />
          <path
            d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
          />
        </svg>
      </span>
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-6"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-7"
    >
      <p
        class="emotion-8"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders with different minHeight 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
  min-height: 64px;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders with fixed width 1`] = `
<DocumentFragment>
  .emotion-0 {
  width: 160px;
}

.emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput renders with full width 1`] = `
<DocumentFragment>
  .emotion-0 {
  width: 100%;
}

.emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput should render custom aria-label 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        aria-label="my custom aria label"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;

exports[`TextInput should render custom placeholder 1`] = `
<DocumentFragment>
  .emotion-1 {
  display: block;
}

.emotion-2 {
  position: relative;
}

.emotion-3 {
  box-sizing: border-box;
  width: 100%;
  cursor: default;
}

.emotion-5 {
  margin: 0;
}

<div
    class="emotion-0"
  >
    <label
      class="emotion-1"
      for="mock-nk-1"
    >
      label
    </label>
    <div
      class="emotion-2"
    >
      <input
        aria-describedby="mock-nk-1-assistive-text"
        aria-invalid="false"
        class="emotion-3"
        data-testid="text-input-email"
        id="mock-nk-1"
        placeholder="This is some text"
        spellcheck="false"
        type="text"
      />
    </div>
    <div
      class="emotion-4"
    >
      <p
        class="emotion-5"
        id="mock-nk-1-assistive-text"
      >
        Assistive Text
      </p>
    </div>
  </div>
</DocumentFragment>
`;
