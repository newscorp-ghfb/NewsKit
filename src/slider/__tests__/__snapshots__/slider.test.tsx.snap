// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`slider labels should be rendered in horisontal slider with labelContainer and LabelPosition.Before 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

.emotion-1 {
  width: 100%;
  margin-bottom: 12px;
  padding: 0 calc(32px / 2);
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
    >
      <div
        class="emotion-2"
      />
    </div>
    <div>
      react-range
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should be rendered in vertical slider with labelContainer and LabelPosition.After 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 100%;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
}

.emotion-1 {
  margin-left: 12px;
  padding: calc(32px / 2) 0;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div>
      react-range
    </div>
    <div
      class="emotion-1"
    >
      <div
        class="emotion-2"
      />
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should be rendered in vertical slider with labelContainer and LabelPosition.Before 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 100%;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  -webkit-align-content: stretch;
  -ms-flex-line-pack: stretch;
  align-content: stretch;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
}

.emotion-1 {
  margin-right: 12px;
  padding: calc(32px / 2) 0;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
    >
      <div
        class="emotion-2"
      />
    </div>
    <div>
      react-range
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should not render labels by default 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div>
      react-range
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should render custom component min, max labels 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

.emotion-1 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  margin-right: 12px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  margin-left: 12px;
}

.emotion-2::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-2::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
      data-testid="min-label"
    >
      <span>
        0
      </span>
    </div>
    <div>
      react-range
    </div>
    <div
      class="emotion-2"
      data-testid="max-label"
    >
      <span>
        100
      </span>
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should render horizontal labels 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

.emotion-1 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-right: 12px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-1 svg {
  fill: #535353;
}

.emotion-1:disabled {
  color: #C0C0C0;
}

.emotion-1:disabled svg {
  fill: #C0C0C0;
}

.emotion-2 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-left: 12px;
}

.emotion-2::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-2::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2 svg {
  fill: #535353;
}

.emotion-2:disabled {
  color: #C0C0C0;
}

.emotion-2:disabled svg {
  fill: #C0C0C0;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
      data-testid="min-label"
    >
      0
    </div>
    <div>
      react-range
    </div>
    <div
      class="emotion-2"
      data-testid="max-label"
    >
      100
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should render max label 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

.emotion-1 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-left: 12px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-1 svg {
  fill: #535353;
}

.emotion-1:disabled {
  color: #C0C0C0;
}

.emotion-1:disabled svg {
  fill: #C0C0C0;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div>
      react-range
    </div>
    <div
      class="emotion-1"
      data-testid="max-label"
    >
      0
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should render min label 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  width: 100%;
  position: relative;
}

.emotion-1 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-right: 12px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-1 svg {
  fill: #535353;
}

.emotion-1:disabled {
  color: #C0C0C0;
}

.emotion-1:disabled svg {
  fill: #C0C0C0;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
      data-testid="min-label"
    >
      0
    </div>
    <div>
      react-range
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider labels should render vertical labels 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  position: relative;
}

.emotion-1 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-top: 12px;
}

.emotion-1::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-1::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-1 svg {
  fill: #535353;
}

.emotion-1:disabled {
  color: #C0C0C0;
}

.emotion-1:disabled svg {
  fill: #C0C0C0;
}

.emotion-2 {
  font-family: "Poppins",sans-serif;
  font-size: 14px;
  line-height: 21px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #535353;
  margin-bottom: 12px;
}

.emotion-2::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-2::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2 svg {
  fill: #535353;
}

.emotion-2:disabled {
  color: #C0C0C0;
}

.emotion-2:disabled svg {
  fill: #C0C0C0;
}

<div
    class="emotion-0"
    data-testid="slider"
  >
    <div
      class="emotion-1"
      data-testid="min-label"
    >
      0
    </div>
    <div>
      react-range
    </div>
    <div
      class="emotion-2"
      data-testid="max-label"
    >
      100
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render custom aria-label slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="my custom aria label"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render custom label component slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="10,20,30"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
    <span />
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render default StyledThumbValue with custom thumbSize prop 1`] = `
<DocumentFragment>
  .emotion-0 {
  font-family: "Poppins",sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #3358CC;
  text-align: center;
  white-space: nowrap;
  top: -32px;
  position: absolute;
  background-color: transparent;
  width: 100%;
}

.emotion-0::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-0::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-0:disabled {
  color: #C0C0C0;
}

<div
    class="emotion-0"
  >
    test
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render dragged slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render multiple index slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: inherit;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="10,20,30"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render range label slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

.emotion-2 {
  font-family: "Poppins",sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #3358CC;
  text-align: center;
  white-space: nowrap;
  top: -32px;
  position: absolute;
  background-color: transparent;
  width: 100%;
}

.emotion-2::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-2::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2:disabled {
  color: #C0C0C0;
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
    <div
      class="emotion-2"
    >
      25
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render slider thumb with an icon 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

.emotion-2 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
  fill: #2E2E2E;
  vertical-align: unset;
  display: inline-block;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-2 {
    transition-property: fill;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-2 {
    transition-property: fill;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
    <svg
      aria-hidden="true"
      class="emotion-2 emotion-3"
      fill="currentColor"
      focusable="false"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 0h24v24H0V0z"
        fill="none"
      />
      <path
        d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86l-3 3.87L9 13.14 6 17h12l-3.86-5.14z"
      />
    </svg>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render undragged slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

<div
    aria-label="slider"
    aria-orientation="horizontal"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderThumb should render vertical slider thumb 1`] = `
<DocumentFragment>
  .emotion-0 {
  box-shadow: 0 0 2px 0 rgba(10,10,10,0.08);
  background-color: #3358CC;
  border-style: solid;
  border-color: #E0E7FF;
  border-width: 1px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  cursor: pointer;
}

.emotion-0 svg {
  fill: #C0C0C0;
}

.emotion-0:hover:not(:disabled) {
  background-color: #2B4AAB;
}

.emotion-0:hover:not(:disabled) svg {
  fill: #C0C0C0;
}

.emotion-0:active:not(:disabled) {
  background-color: #213A82;
}

.emotion-0:active:not(:disabled) svg {
  fill: #535353;
}

.emotion-0:disabled {
  box-shadow: none;
  background-color: #DEDEDE;
  border-style: none;
  border-color: none;
  border-width: none;
}

.emotion-0:disabled svg {
  fill: #C0C0C0;
}

.emotion-0:focus-visible:not(:disabled) {
  outline-color: #3768FB;
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .emotion-0:focus-visible:not(:disabled) {
      outline-offset: -7px;
      outline-style: auto;
    }
  }
}

.emotion-1 {
  position: absolute;
  top: 50%;
  left: 50%;
  background-color: #3358CC;
  border-radius: 50%;
  opacity: 0;
  width: 48px;
  height: 48px;
  -webkit-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -moz-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  -ms-transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
  transform: translate3d(calc(48px / -2), calc(48px / -2), 0);
}

.emotion-1:hover:not(:disabled) {
  opacity: 0.2;
}

.emotion-1:disabled {
  opacity: 0;
}

.emotion-1:hover:active:not(:disabled) {
  opacity: 0.4;
}

.emotion-1:valid:hover:not(:disabled) {
  background-color: #148F39;
  opacity: 0.2;
}

.emotion-1:valid:hover:active:not(:disabled) {
  background-color: #148F39;
  opacity: 0.4;
}

.emotion-1:invalid:hover:not(:disabled) {
  background-color: #D20600;
  opacity: 0.2;
}

.emotion-1:invalid:hover:active:not(:disabled) {
  background-color: #D20600;
  opacity: 0.4;
}

@media screen and (prefers-reduced-motion: no-preference) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

@media screen and (prefers-reduced-motion: reduce) {
  .emotion-1 {
    transition-property: opacity;
    transition-duration: 0ms;
    transition-timing-function: cubic-bezier(0, 0, .5, 1);
  }
}

.emotion-2 {
  font-family: "Poppins",sans-serif;
  font-size: 16px;
  line-height: 24px;
  font-weight: 500;
  letter-spacing: 0;
  padding: 0.5px 0px;
  color: #3358CC;
  text-align: center;
  white-space: nowrap;
  right: -32px;
  position: absolute;
  background-color: transparent;
  width: 100%;
}

.emotion-2::before {
  content: '';
  margin-bottom: -0.403em;
  display: block;
}

.emotion-2::after {
  content: '';
  margin-top: -0.4em;
  display: block;
}

.emotion-2:disabled {
  color: #C0C0C0;
}

<div
    aria-label="slider"
    aria-orientation="vertical"
    class="emotion-0"
    data-testid="slider-thumb"
    values="25"
  >
    <span
      class="emotion-1"
      data-testid="slider-feedback"
    />
    <div
      class="emotion-2"
    >
      25
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render default slider track 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2 - 12px/2) calc(32px/2);
  height: 12px;
  width: 100%;
}

.emotion-0:disabled {
  background-color: #F4F4F4;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    values="25"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render disabled slider track 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: not-allowed;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2 - 12px/2) calc(32px/2);
  height: 12px;
  width: 100%;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    disabled=""
    values="25"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render disabled slider track 2`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: not-allowed;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2 - 12px/2) calc(32px/2);
  height: 12px;
  width: 100%;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    disabled=""
    values="25"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render grabbed slider track 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: -webkit-grabbing;
  cursor: grabbing;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2 - 12px/2) calc(32px/2);
  height: 12px;
  width: 100%;
}

.emotion-0:disabled {
  background-color: #F4F4F4;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    values="25"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render multi-thumb slider track 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: inherit;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2 - 12px/2) calc(32px/2);
  height: 12px;
  width: 100%;
}

.emotion-0:disabled {
  background-color: #F4F4F4;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    values="10,20"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;

exports[`slider react-range Range function props renderTrack should render vertical slider track 1`] = `
<DocumentFragment>
  .emotion-0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  box-sizing: border-box;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  background-color: #F4F4F4;
  border-radius: 20rem;
  margin: calc(32px/2) calc(32px/2 - 12px/2);
  height: 100%;
  width: 12px;
}

.emotion-0:disabled {
  background-color: #F4F4F4;
}

<div
    class="emotion-0"
    data-testid="slider-track"
    values="25"
  >
    <div>
      children
    </div>
  </div>
</DocumentFragment>
`;
